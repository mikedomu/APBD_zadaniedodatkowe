// <auto-generated />
using System;
using AdditionalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdditionalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdditionalProject.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEvent");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Date = new DateTime(2025, 7, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Event poświęcony ogórkom kiszonym i jak je przygotowywać",
                            Name = "Konferencja Ogórek"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            Date = new DateTime(2025, 7, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Warsztaty o AI",
                            Name = "AI Workshop"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 75,
                            Date = new DateTime(2025, 7, 20, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kochamy Pomidory"
                        });
                });

            modelBuilder.Entity("AdditionalProject.Models.EventRegistration", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<int>("IdParticipant")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("IdEvent", "IdParticipant");

                    b.HasIndex("IdParticipant");

                    b.ToTable("EventRegistration");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            IdParticipant = 1,
                            RegisteredAt = new DateTime(2025, 6, 1, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdEvent = 1,
                            IdParticipant = 2,
                            RegisteredAt = new DateTime(2025, 6, 2, 12, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdEvent = 2,
                            IdParticipant = 3,
                            RegisteredAt = new DateTime(2025, 6, 5, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdEvent = 3,
                            IdParticipant = 1,
                            RegisteredAt = new DateTime(2025, 6, 8, 9, 45, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AdditionalProject.Models.EventSpeaker", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<int>("IdSpeaker")
                        .HasColumnType("int");

                    b.HasKey("IdEvent", "IdSpeaker");

                    b.HasIndex("IdSpeaker");

                    b.ToTable("EventSpeaker");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            IdSpeaker = 1
                        },
                        new
                        {
                            IdEvent = 1,
                            IdSpeaker = 2
                        },
                        new
                        {
                            IdEvent = 2,
                            IdSpeaker = 3
                        },
                        new
                        {
                            IdEvent = 3,
                            IdSpeaker = 1
                        });
                });

            modelBuilder.Entity("AdditionalProject.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdParticipant");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Participant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "kasia.w@xd.com",
                            FirstName = "Katarzyna",
                            LastName = "Wójcik"
                        },
                        new
                        {
                            Id = 2,
                            Email = "piotr.l@xdxd.com",
                            FirstName = "Piotr",
                            LastName = "Lewandowski"
                        },
                        new
                        {
                            Id = 3,
                            Email = "zofia.k@xdd.com",
                            FirstName = "Zofia",
                            LastName = "Kaczmarek"
                        });
                });

            modelBuilder.Entity("AdditionalProject.Models.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSpeaker");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Speaker");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "anna.nowak@gmail.com",
                            FirstName = "Anna",
                            LastName = "Nowak"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jan.kowalski@wp.com",
                            FirstName = "Jan",
                            LastName = "Kowalski"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ewa.w@yahoo.com",
                            FirstName = "Ewa",
                            LastName = "Wiśniewska"
                        });
                });

            modelBuilder.Entity("AdditionalProject.Models.EventRegistration", b =>
                {
                    b.HasOne("AdditionalProject.Models.Event", "Event")
                        .WithMany("EventRegistrations")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdditionalProject.Models.Participant", "Participant")
                        .WithMany("EventRegistrations")
                        .HasForeignKey("IdParticipant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("AdditionalProject.Models.EventSpeaker", b =>
                {
                    b.HasOne("AdditionalProject.Models.Event", "Event")
                        .WithMany("EventSpeakers")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdditionalProject.Models.Speaker", "Speaker")
                        .WithMany("EventSpeakers")
                        .HasForeignKey("IdSpeaker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("AdditionalProject.Models.Event", b =>
                {
                    b.Navigation("EventRegistrations");

                    b.Navigation("EventSpeakers");
                });

            modelBuilder.Entity("AdditionalProject.Models.Participant", b =>
                {
                    b.Navigation("EventRegistrations");
                });

            modelBuilder.Entity("AdditionalProject.Models.Speaker", b =>
                {
                    b.Navigation("EventSpeakers");
                });
#pragma warning restore 612, 618
        }
    }
}
